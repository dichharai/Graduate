// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GymStats renders without crashing 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={undefined}
  testID={undefined}
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={undefined}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutoAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <RCTScrollView
        scrollsToTop={true}
      >
        <View>
          <View
            style={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <Image
                  onError={[Function]}
                  onHeightChange={[Function]}
                  source={
                    Object {
                      "uri": "t",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 0,
                        "width": 750,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 20,
                    "textAlign": "center",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Hours
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
            </View>
          </View>
          <View
            style={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <Image
                  onError={[Function]}
                  onHeightChange={[Function]}
                  source={
                    Object {
                      "uri": "e",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 0,
                        "width": 750,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 20,
                    "textAlign": "center",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Hours
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
            </View>
          </View>
          <View
            style={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <Image
                  onError={[Function]}
                  onHeightChange={[Function]}
                  source={
                    Object {
                      "uri": "s",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 0,
                        "width": 750,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 20,
                    "textAlign": "center",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Hours
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
            </View>
          </View>
          <View
            style={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <Image
                  onError={[Function]}
                  onHeightChange={[Function]}
                  source={
                    Object {
                      "uri": "t",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 0,
                        "width": 750,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 20,
                    "textAlign": "center",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Hours
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={undefined}
              />
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
